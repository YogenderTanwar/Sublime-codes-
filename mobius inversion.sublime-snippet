<snippet>
	<content><![CDATA[
const int N = 1000001; // change accor. to prob
int lp[N + 1]; // least prime no
vector<int> pr;
int phi[N], mob[N];


void linear_sieve(int n)
{
	phi[1] = 1;
	mob[1] = 1;

	for (int i = 2; i <= n; ++i) {
		if (lp[i] == 0) {
			lp[i] = i;
			pr.push_back (i);
		}
		for (int j = 0; j < (int)pr.size() && pr[j] <= lp[i] && i * pr[j] <= n; ++j)
			lp[i * pr[j]] = pr[j];

		int x = i;

		int res = i;
		int ans = 1;
		int cnt = 0;

		if (lp[i] == i)
		{
			phi[i] = i - 1;
			mob[i] = -1;
			continue;


		}



		while (x > 1)
		{
			int d = lp[x];
			int k = 0;


			while (x % d == 0)
			{
				res -= (res / d);
				x = x / d;
				k++;

				if (k > 1) ans = 0;



			}
			cnt++;
		}

		if (cnt & 1) ans *= -1;
		else ans *= 1;

		phi[i] = res;
		mob[i] = ans;

	}

}



]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>mobius</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
